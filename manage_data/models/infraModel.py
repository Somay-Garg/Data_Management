from django.db import models
from django.core.validators import RegexValidator

class Infrastructure(models.Model):
    name_of_the_institute = models.CharField(max_length=255,blank=False)         
    institute_category = models.CharField(max_length=255,default='Affiliated to a University')
    name_of_affiliating_university = models.CharField(max=255,blank=False)
    Institute_Type = (
        ('Private Aided','Private Aided'),
        ('Private Unaided','Private Unaided')
    )
    institute_type = models.CharField(max_length=255, choices=Institute_Type,default=None,blank=False)
    year_of_establishment = models.IntegerField()
    year_of_1st_passout_batch = models.IntegerField()
    address = models.CharField(max_length=255, blank=False)
    campus_area = models.IntegerField(default=0)
    total_built_up_area = models.IntegerField(default=0)
    phone_regex = RegexValidator(regex=r'^\+?1?\d{10,15}$',message="Phone number must be a 10 digit number")
    phone = models.CharField(validators=[phone_regex],max_length=13,blank=False)
    email = models.EmailField(max_length=254) 
    website = models.URLField(max_length=200)
    head_of_the_institute = models.CharField(default='Director')
    name_of_the_head_of_institution = models.CharField(max_length=255)
    available_courses = models.CharField(max_length=255)
    total_no_of_students_passed_since_establishment_of_college = models.IntegerField()
    choice=(
        ('Yes','Yes'),
        ('No','No')
    )
    AICTE_approved = models.CharField(choices=choice,default='Yes')
    year_of_first_AICTE_accreditation = models.IntegerField()
    AICTE_valid_upto = models.IntegerField()
    NAAC_accredited = models.CharField(choices=choice,default='Yes')
    year_of_first_NAAC_accreditation = models.IntegerField()
    latest_NAAC_grade = models.CharField(max_length=10)
    latest_NAAC_score = models.IntegerField()
    NAAC_accreditation_valid_upto =models.IntegerField()
    date_of_last_submitted_AQAR_report = models.DateField()
    ABET_accredited = models.CharField(choices=choice,default='No')
    number_of_classrooms =models.IntegerField()
    no_of_classrooms_with_audio_visual_facility = models.IntegerField()
    no_of_labs= models.IntegerField()
    no_of_computer_labs=models.IntegerField()
    no_of_auditoriums =models.IntegerField()
    total_sitting_capacity_in_main_auditorium=models.IntegerField()
    no_of_conference_rooms=models.IntegerField()
    no_of_recreation_rooms=models.IntegerField()
    no_of_faculty_cabins=models.IntegerField()
    no_of_PCs_provided_to_student=models.IntegerField()
    no_of_latest_instruments_in_labs=models.IntegerField()
    availability_of_water_recyling_unit=models.CharField(choices=choice,default='Yes')
    availability_pf_anti_ragging_cell=models.CharField(choices=choice,default='Yes')
    availability_of_grievance_redressal_mechanism=models.CharField(choices=choice,default='Yes')
    availability_of_internal_complaints_commitee=models.CharField(choices=choice,default='Yes')
    availability_of_NSS_cell=models.CharField(choices=choice,default='Yes')
    availability_of_IQAC=models.CharField(choices=choice,default='Yes')
    availability_of_faculty_feedback_mechanism=models.CharField(choices=choice,default='Yes')
    total_no_of_seminars,conferences,workshops,symposia_organised_by_IQAC_in_curreny_AY = models.IntegerField()
    no_of_faculties_visited_any_foreign_university_in_curreny_AY=models.IntegerField()
    availability_of_alumini_association=models.CharField(choices=choice,default='Yes')
    no_of_alumini=models.IntegerField()
    availability_of_incubation_centre=models.CharField(choices=choice,default='Yes')
    no_of_companies_setup_in_last_5_years_by_incubation_centre=models.IntegerField()
    hostel_facilities_for_boys=models.CharField(choices=choice,default='Yes')
    area_of_boys_hostel=models.IntegerField()
    capacity_of_boys_hostel=models.IntegerField()
    hostel_facilities_for_girls=models.CharField(choices=choice,default='Yes')
    area_of_girls_hostel=models.IntegerField()
    capacity_of_girls_hostel=models.IntegerField()
    residence_facility_for_faculty=models.CharField(choices=choice,default='Yes')
    total_staff_quarters=models.IntegerField()
    how_many_faculties_residing_in_college_campus=models.IntegerField()
    canteen=models.CharField(choices=choice,default='Yes')
    cricket_ground=models.CharField(choices=choice,default='Yes')
    basketball_court=models.CharField(choices=choice,default='Yes')
    football_ground=models.CharField(choices=choice,default='Yes')
    swimming_pool=models.CharField(choices=choice,default='No')
    lawn_tennis_court = models.CharField(choices=choice,default='Yes')
    badminton_court=models.CharField(choices=choice,default='Yes')
    bank_branch=models.CharField(choices=choice,default='Yes')
    wifi_facilities=models.CharField(choices=choice,default='Yes')
    table_tennis_boards=models.CharField(choices=choice,default='Yes')
    gymnasium=models.CharField(choices=choice,default='Yes')
    bank_ATM=models.CharField(choices=choice,default='Yes')
    no_of_publications_by_college=models.IntegerField()
    name_of_publications=models.CharField(max_length=255,blank=False)
    publication_details=models.CharField(max_length=255,blank=False)

    def __str__(self):
        return self.name_of_the_institute
